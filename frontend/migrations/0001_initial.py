# Generated by Django 5.0.6 on 2024-06-02 06:04

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import frontend.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="LeadTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Lead_Name", models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="OrgName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Org_Name", models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name="OrgType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("org_type", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="ProductTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Product_Name", models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "Employee_id",
                    models.CharField(blank=True, max_length=10, null=True, unique=True),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=150)),
                (
                    "employee_mobile_number",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=frontend.models.user_upload_path,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("parent_number", models.IntegerField(blank=True, null=True)),
                (
                    "employee_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=frontend.models.user_image_upload_path,
                    ),
                ),
                (
                    "qualification",
                    models.CharField(blank=True, default="", max_length=10, null=True),
                ),
                ("company_email", models.EmailField(blank=True, max_length=254)),
                ("date_of_join", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_trainee", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=True)),
                ("is_teamlead", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="custom_user_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Lead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_name", models.CharField(max_length=20)),
                ("client_number", models.IntegerField()),
                ("company_name", models.CharField(max_length=30)),
                (
                    "company_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="lead_and_customer_companylogo"
                    ),
                ),
                (
                    "business_type",
                    models.CharField(
                        choices=[("One Time", "One Time"), ("Recurring", "Recurring")],
                        max_length=20,
                    ),
                ),
                ("proposal_amount", models.FloatField()),
                ("finally_budjet", models.FloatField()),
                ("end_of_date", models.DateField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("High", "High"),
                            ("Medium", "Medium"),
                            ("Low", "Low"),
                        ],
                        max_length=10,
                    ),
                ),
                ("mail_id", models.EmailField(blank=True, max_length=50, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Fresh", "Fresh"),
                            ("Call Back", "Call Back"),
                            ("Do Not Disturb", "Do Not Disturb"),
                            ("Follow up", "Follow up"),
                            ("Proposed", "Proposed"),
                            ("Hold", "Hold"),
                            ("Closed", "Closed"),
                        ],
                        max_length=15,
                    ),
                ),
                ("additional_remarks", models.TextField(max_length=100)),
                ("call_back_comments", models.TextField(max_length=100)),
                ("call_back", models.DateField()),
                ("is_customer", models.BooleanField(default=False)),
                ("created_date", models.DateField()),
                ("updated_date", models.DateField()),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="frontend.city"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reffral_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="frontend.leadtable",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="frontend.location",
                    ),
                ),
                (
                    "company_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="frontend.orgtype",
                    ),
                ),
                ("products", models.ManyToManyField(to="frontend.producttable")),
            ],
        ),
        migrations.CreateModel(
            name="customertable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_id",
                    models.CharField(
                        default=frontend.models.generate_customer_id,
                        max_length=10,
                        unique=True,
                    ),
                ),
                ("client_name", models.CharField(max_length=20)),
                ("client_number", models.IntegerField()),
                ("org_name", models.CharField(max_length=30)),
                (
                    "org_img",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=frontend.models.lead_and_customer_companylogo,
                    ),
                ),
                (
                    "business_type",
                    models.CharField(
                        choices=[("One Time", "One Time"), ("Recurring", "Recurring")],
                        max_length=20,
                    ),
                ),
                ("amount", models.FloatField()),
                ("end_of_date", models.DateField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("High", "High"),
                            ("Medium", "Medium"),
                            ("Low", "Low"),
                        ],
                        max_length=10,
                    ),
                ),
                ("mail_id", models.EmailField(blank=True, max_length=50, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Fresh", "Fresh"),
                            ("Call Back", "Call Back"),
                            ("Do Not Disturb", "Do Not Disturb"),
                            ("Follow up", "Follow up"),
                            ("Proposed", "Proposed"),
                            ("Hold", "Hold"),
                            ("Closed", "Closed"),
                        ],
                        max_length=15,
                    ),
                ),
                ("comment", models.TextField(max_length=100)),
                ("remarks", models.TextField(max_length=100)),
                ("follow_up", models.DateField()),
                ("created_date", models.DateField(auto_now_add=True)),
                ("updated_date", models.DateField(auto_now=True)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="frontend.city"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="custoner_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="customer_updated_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lead_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="frontend.leadtable",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="frontend.location",
                    ),
                ),
                (
                    "org_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="frontend.orgtype",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(blank=True, to="frontend.producttable"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        verbose_name=datetime.datetime(2024, 6, 2, 6, 4, 43, 603929)
                    ),
                ),
                ("lable", models.CharField(max_length=100)),
                ("action", models.CharField(max_length=100)),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
